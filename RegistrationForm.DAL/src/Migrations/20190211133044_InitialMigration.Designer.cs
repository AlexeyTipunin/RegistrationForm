// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationForm.DAL.src.Context;

namespace RegistrationForm.DAL.Migrations
{
    [DbContext(typeof(RegistrationDbContext))]
    [Migration("20190211133044_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("RegistrationForm.DAL.src.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Agreement");

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("PasswordHash")
                        .IsRequired();

                    b.Property<int>("ProvinceId");

                    b.HasKey("AccountId");

                    b.HasAlternateKey("Login");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("RegistrationForm.DAL.src.Entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Country 1"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Country 2"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "Country 3"
                        });
                });

            modelBuilder.Entity("RegistrationForm.DAL.src.Entities.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountryId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ProvinceId");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            ProvinceId = 1,
                            CountryId = 1,
                            Name = "Province 1.1"
                        },
                        new
                        {
                            ProvinceId = 2,
                            CountryId = 1,
                            Name = "Province 1.2"
                        },
                        new
                        {
                            ProvinceId = 3,
                            CountryId = 1,
                            Name = "Province 1.3"
                        },
                        new
                        {
                            ProvinceId = 4,
                            CountryId = 2,
                            Name = "Province 2.1"
                        },
                        new
                        {
                            ProvinceId = 5,
                            CountryId = 2,
                            Name = "Province 2.2"
                        },
                        new
                        {
                            ProvinceId = 6,
                            CountryId = 2,
                            Name = "Province 2.3"
                        },
                        new
                        {
                            ProvinceId = 7,
                            CountryId = 3,
                            Name = "Province 3.1"
                        },
                        new
                        {
                            ProvinceId = 8,
                            CountryId = 3,
                            Name = "Province 3.2"
                        },
                        new
                        {
                            ProvinceId = 9,
                            CountryId = 3,
                            Name = "Province 3.3"
                        });
                });

            modelBuilder.Entity("RegistrationForm.DAL.src.Entities.Account", b =>
                {
                    b.HasOne("RegistrationForm.DAL.src.Entities.Province", "Province")
                        .WithMany("Accounts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RegistrationForm.DAL.src.Entities.Province", b =>
                {
                    b.HasOne("RegistrationForm.DAL.src.Entities.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
